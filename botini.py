from telegram import Update, BotCommand
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# Substitua pelo seu token do BotFather
TOKEN = os.getenv('TOKEN')

# Comando /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "üé∞ Bem-vindo ao Cassino Bet4Brasil!\n\nDigite /info para saber mais sobre nossos servi√ßos, /suporte para ajuda, /promocoes para ver as ofertas ou /faq para d√∫vidas frequentes."
    )

# Comando /info
async def info(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "‚ÑπÔ∏è Informa√ß√µes:\n\nAcesse nossos jogos em https://bet4brasil.online/home/game\n\nEstamos dispon√≠veis 24/7 para garantir a sua divers√£o!"
    )

# Comando /suporte
async def suporte(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "üõ†Ô∏è Suporte:\n\nPara d√∫vidas ou problemas, entre em contato pelo e-mail: suporte@bet4brasil.online ou responda aqui mesmo e nossa equipe ir√° ajud√°-lo."
    )

# Comando /promocoes
async def promocoes(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "üéÅ Promo√ß√µes Ativas:\n\n- B√¥nus de boas-vindas de 100%!\n- Giros gr√°tis toda sexta-feira!\n- Cashback de 10% em perdas semanais.\n\nAproveite agora mesmo em https://bet4brasil.online/home/game"
    )

# Comando /faq
async def faq(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "‚ùì Perguntas Frequentes:\n\n1Ô∏è‚É£ Como fa√ßo para depositar?\n‚û°Ô∏è Acesse sua conta e clique em 'Dep√≥sito'.\n\n2Ô∏è‚É£ Como sacar meus ganhos?\n‚û°Ô∏è V√° at√© 'Saque' e siga as instru√ß√µes.\n\n3Ô∏è‚É£ √â seguro jogar aqui?\n‚û°Ô∏è Sim! Usamos tecnologia de criptografia avan√ßada para proteger seus dados."
    )

# Resposta padr√£o para mensagens n√£o reconhecidas
async def unknown_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "Desculpe, n√£o entendi seu pedido. Tente /info, /suporte, /promocoes ou /faq."
    )

# Inicializa√ß√£o do bot
async def main():
    app = ApplicationBuilder().token(TOKEN).build()

    # Definindo comandos
    await app.bot.set_my_commands([
        BotCommand('start', 'Iniciar o bot'),
        BotCommand('info', 'Informa√ß√µes sobre o cassino'),
        BotCommand('suporte', 'Obter suporte'),
        BotCommand('promocoes', 'Ver promo√ß√µes ativas'),
        BotCommand('faq', 'Perguntas frequentes')
    ])

    # Adicionando handlers
    app.add_handler(CommandHandler('start', start))
    app.add_handler(CommandHandler('info', info))
    app.add_handler(CommandHandler('suporte', suporte))
    app.add_handler(CommandHandler('promocoes', promocoes))
    app.add_handler(CommandHandler('faq', faq))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, unknown_message))

    print("Bot iniciado...")
    await app.run_polling()

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())
